@import url("https://fonts.googleapis.com/css?family=IBM+Plex+Sans:300,300i,500,500i,700,700i|Cousine:400,400i,700,700i|IBM+Plex+Serif:400,400i,700,700i");

/* Variables */

:root {
  --font-sansserif: IBM Plex Sans, sans-serif;
  --font-serif: IBM Plex Serif, serif;
  --font-mono: Cousine, monospace;

  --white: #ffffff;
  --darkestgray: #222222;
  --darkergray: #333333;
  --darkgray: #555555; /* darkgray */
  --gray: #aaaaaa;
  --lightgray: #cccccc; /* lightgray */
  --lightergray: #eee;
  --purple: #663399; /* rebeccapurple; */
  --darkpurple: hsl(270, 50%, 30%); /* rebeccapurple; */
  --red: #ff595e; /* tomato */
  --yellow: #fec938; /* gold */
  --lightyellow: hsl(44, 100%, 78%); /* gold */
  --lighteryellow: hsl(44, 100%, 88%);
  --lightblue: #d8e6f3; /* ghostwhite */
  --blue: #1982c4; /* steelblue */
  --paleblue: #263238;
  --green: #59cd90; /*Alt: #1C7C54;*/
  --darkblue: #162e3d;
  --orange: #ff9849;
  --black: #111111;

  --transparent: rgba(0,0,0,0);

  --primary: var(--darkgray);
  --secondary: var(--gray);
  --tertiary: var(--lightgray);
  --quaternary: var(--lightgray);

  --accent: var(--purple);
  
  --lightemphasis: var(--lighteryellow);
  --emphasis: var(--yellow);

  --border-width: 3px;
  --border-radius: 6px;
  --border-small: 3px;

  --slider-size: var(--base3);

  --base: 8px;
  --base2: calc(var(--base) * 2);
  --base3: calc(var(--base) * 3);
  --base4: calc(var(--base) * 4);
  --base5: calc(var(--base) * 5);
  --base6: calc(var(--base) * 6);
  --base7: calc(var(--base) * 7);
  --base8: calc(var(--base) * 8);
  --base9: calc(var(--base) * 9);
  --base10: calc(var(--base) * 10);

  --cols: 1fr 1fr 1fr;
  --rows: none;
  --gap: var(--base2);

  --text-size: calc(var(--base) * 1.5);
  --text-transform: scale(1, 1);

  --transition-duration: 0.2s;

  /* @TODO Figure out css var vs cssprops situation */
  --icon-stroke: var(--primary);
  --icon-fill: var(--white);
}

/* All */

* {
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

/* Body */

body {
  font-family: var(--font-sansserif);
  font-size: calc(var(--base) * 2);
  margin: 0;
  color: var(--primary);
  background: var(--white);
}

h1,
h2,
h3,
h4,
h5 {
  margin: 0 0 0.5em 0;
  padding: 0;
  line-height: 1.2em;
  color: var(--primary);
}
h1 > *,
h2 > *,
h3 > *,
h4 > *,
h5 > * {
  margin-right: calc(1ch * 0.5);
}
h1 {
  font-size: calc(var(--base) * 3 + 2vw);
  line-height: 1em;
}
h2 {
  font-size: calc(var(--base) * 4);
}
h3 {
  font-size: calc(var(--base) * 3);
}
h4 {
  font-size: calc(var(--base) * 2.5);
}
h5 {
  font-size: calc(var(--base) * 2);
}
p {
  font-size: calc(var(--base) * 2);
  line-height: calc(var(--base) * 3);
  margin: 0 0 var(--base2) 0;
  color: var(--primary);
}
br {
  margin: 0 0 var(--base2) 0;
}
a {
  text-decoration: none;
  color: var(--primary);
  border-bottom: 2px solid var(--primary);
  font-weight: bold;
}
b,
strong {
  color: var(--primary);
}

big {
  font-size: 1.3em !important;
  line-height: 1.5em !important;
}
big h1,
h1 big big h2,
h1 big,
big h3,
h1 big,
big h4,
h4 big,
big h5,
h5 big {
  line-height: 95% !important;
}

big big {
  letter-spacing: -0.02em;
}

big big big {
  letter-spacing: -0.04em;
}

small {
  font-size: 0.9em !important;
  color: var(--primary);
}

img {
  width: 100%;
  display: block;
}
ul {
  margin: 0 0 calc(var(--base) * 2) 0;
}
li {
  color: var(--primary);
  font-size: calc(var(--base) * 2);
  margin-bottom: var(--base);
}
ol {
  counter-reset: f-counter;
  list-style: none;
  padding-left: 40px;
}
ol li {
  margin: 0 0 0.5rem 0;
  counter-increment: f-counter;
  position: relative;
}
ol li::before {
  --size: calc(var(--base) * 3);
  content: counter(f-counter);
  color: var(--white);
  font-size: calc(var(--size) * 0.55);
  font-weight: bold;
  position: absolute;
  left: calc(-1 * var(--size) - 10px);
  line-height: var(--size);
  width: var(--size);
  height: var(--size);
  top: 0;
  background: var(--accent);
  border-radius: 50%;
  text-align: center;
}
hr {
  border: 0;
  height: 0;
  border-bottom: 3px solid var(--primary);
}
.break {
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  word-break: break-all;
  word-break: break-word;
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

input[type="range"] {
  display: block;
  -webkit-appearance: none;
  width: 100%;
  background: var(--primary);
  height: var(--border-width);
  position: relative;
  outline: none;
  width: 100%;
  margin-bottom: var(--base5);
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  border: var(--border-width) solid var(--primary);
  height: var(--slider-size);
  width: var(--slider-size);
  border-radius: 1000px;
  background: white;
  cursor: pointer;
  background: var(--white);
}
input[type="range"]::-webkit-slider-thumb:hover {
  height: calc(var(--slider-size) * 1.05);
  width: calc(var(--slider-size) * 1.05);
  border-radius: 1000px;
}
input[type="text"],
input[type="number"] {
  display: block;
  border: var(--border-width) solid var(--primary);
  color: var(--darkgray);
  border-radius: var(--border-radius);
  padding: calc(var(--base) * 0.55) var(--base);
  outline: none;
  font-size: calc(var(--base) * 1.75);
  font-weight: bold;
  margin: 0 0 var(--base2) 0;
  box-shadow: inset 3px 3px 0px var(--lightergray);
  width: var(--base8);
}

input:disabled {
  opacity: 0.3;
}

label,
.label {
  font-size: calc(var(--base) * 2.1);
  display: block;
  margin-bottom: var(--base2);
  color: var(--primary);
}

/* TODO: remove? */

.sublabel {
  margin-top: calc(var(--base2) * -1);
  margin-bottom: var(--base2);
  color: var(--secondary);
}

details {
  padding: var(--base2);
  background: var(--lightemphasis);
  border-left: 4px solid var(--emphasis);
  margin-bottom: var(--base2);
}
details p:first-child {
  margin-top: var(--base2);
}
details p:last-child {
  margin-bottom: 0;
}
details summary {
  color: var(--primary);
  font-weight: bold;
  margin-bottom: var(--base);
  outline: none;
}
details pre,
details code {
  background: var(--lighteryellow);
}

.bullet,
h1 strong,
h2 strong,
h3 strong,
h4 strong,
h5 strong {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 100px;
  margin-right: calc(1ch / 2);
  width: 1.5em;
  height: 1.5em;
  background: var(--purple);
  color: var(--white);
}

blockquote {
  margin: 0;
  padding: var(--base2);
  background: var(--lightemphasis);
  border-left: 4px solid var(--emphasis);
  margin-bottom: var(--base2);
}
blockquote p:last-child {
  margin-bottom: 0;
}

del {
  font-family: var(--font-serif);
  text-decoration: none;
  font-size: 1.05em !important;
  line-height: 1.6em !important;
}

/* Code and variables */

/* Code */

pre {
  font-family: var(--font-mono);
  font-size: calc(var(--base) * 1.75);
  line-height: calc(var(--base) * 2.5);
  border-radius: var(--border);
  background: var(--lightblue);
  color: var(--blue);
  padding: var(--base2);
  margin: 0 0 var(--base2) 0;
  word-break: break-word;
  white-space: pre-wrap;
}

code {
  font-family: var(--font-mono);
  border-radius: 2px;
  background: var(--lightblue);
  color: var(--blue);
  padding: calc(var(--base) / 3) calc(var(--base) / 2) 0 calc(var(--base) / 2);
  font-size: calc(var(--base) * 1.75);
  overflow: auto;
  white-space: nowrap;
}

pre code {
  white-space: pre-wrap;
  padding: 0;
  overflow: auto;
}

output {
  display: block;
  font-family: var(--font-mono);
  font-size: calc(var(--base) * 1.75);
  line-height: calc(var(--base) * 2.5);
  white-space: pre-wrap;
  overflow: auto;
  padding: var(--base2);
  color: var(--white);
  background: var(--black);
  margin: 0 0 var(--base2) 0;
}
output p {
  margin: calc(var(--base) * 2.5) 0 0 0;
  color: var(--white);
  font-size: calc(var(--base) * 1.75);
  line-height: calc(var(--base) * 2.5);
}
output p:first-child {
  margin: 0;
}
output .gray {
  color: gray;
}
output .green-bg {
  background: green;
}
output .red-bg {
  background: red;
}

/* Slides */

center {
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  height: 100%;
}

section {
  padding: var(--content-section-padding, var(--base4));
  color: var(--primary);
  font-size: inherit;
  line-height: inherit;
}

/* Extra */

kbd {
  font-family: var(--font-mono);
  background: var(--gray);
  color: var(--lightergray);
  padding: calc(var(--base) / 3) calc(var(--base) / 2) 0 calc(var(--base) / 2);
  font-size: calc(var(--base) * 1.75);
  border-radius: 2px;
}

strong em,
mark {
  border-radius: 2px;
  border-radius: var(--border-radius-small);
  background: var(--emphasis);
  color: var(--darkgray);
  padding: 0 calc(var(--base) / 2);
  border-radius: 2px;
  font-weight: normal;
  font-style: normal;
}

var {
  font-weight: normal;
  font-style: normal;
  border-radius: 2px;
  border-radius: var(--border-radius-small);
  color: var(--red);
  padding: 0 calc(var(--base) / 3);
  font-family: KaTeX_Math, var(--font-serif) !important;
  font-style: italic;
  font-size: 1.25em;
  white-space: pre-wrap;
  border-radius: 2px;
}
var.gray {
  color: var(--gray);
}
var.purple {
  color: var(--purple);
}
var.orange {
  color: var(--orange);
}
var.blue {
  color: var(--blue);
}
var.green {
  color: var(--green);
}

/* Tables */

table {
  width: 100%;
  border-collapse: collapse;
  margin-bottom: var(--base2);
}
th {
  border-bottom: 3px solid var(--tertiary);
  padding: calc(var(--base) * 1) calc(var(--base) / 2);
  text-align: left;
  font-weight: normal;
  color: var(--secondary);
  font-size: calc(var(--base) * 1.8);
}
th p {
  color: var(--secondary);
  font-size: calc(var(--base) * 1.8);
}
tr {
  border-bottom: 1px solid var(--tertiary);
}
td {
  padding: calc(var(--base) * 1) calc(var(--base) / 1.5);
  color: var(--primary);
  font-size: calc(var(--base) * 1.8);
  line-height: calc(var(--base) * 2.5);
  vertical-align: top;
}
th p:last-child,
td p:last-child {
  margin-bottom: 0;
}
td code {
  --lightblue: transparent;
  padding: 0;
}
td p {
  font-size: calc(var(--base) * 1.8);
  line-height: calc(var(--base) * 2.5);
}

/* Buttons */

button.primary,
.button_primary,
.primary {
  display: inline-flex;
  align-items: center;
  background: var(--purple);
  padding: calc(var(--base) * 1.5) calc(var(--base) * 2);
  border-radius: var(--border-radius);
  color: var(--white);
  font-family: var(--font-sansserif);
  font-weight: bold !important;
  cursor: pointer;
  border: none;
  transition: all 0.1s linear;
  font-size: 1em;
  --icon-stroke: var(--white);
  --icon-fill: var(--transparent);
}
.primary .f-svg {
  margin: 0 0.5ch !important;
  transform: scale(2ch);
}
.primary:hover {
  background: var(--darkpurple);
}

button.secondary,
.button_secondary,
.secondary {
  display: inline-flex;
  align-items: center;
  background: var(--tertiary);
  padding: calc(var(--base) * 1.5) calc(var(--base) * 2);
  border-radius: var(--border-radius);
  color: var(--darkgray);
  --icon-color: var(--darkgray);
  font-family: var(--font-sansserif);
  font-weight: bold;
  cursor: pointer;
  border: none;
  font-size: var(--base2);
  transition: all 0.1s linear;
  --icon-stroke: var(--darkgray);
  font-size: 1em;
}
.secondary .f-svg {
  margin: 0 0.5ch !important;
}
.secondary:hover {
  background: lightgray;
}

button,
.button_tertiary,
.tertiary {
  padding: calc(var(--base) * 0.5) calc(var(--base) * 1);
  display: inline-flex;
  align-items: center;
  border: 3px solid var(--darkgray);
  border-radius: var(--border-radius);
  color: var(--darkgray);
  font-weight: bold;
  font-family: var(--font-sansserif);
  font-size: calc(var(--base) * 1.75);
  cursor: pointer;
  outline: none;
  background: var(--white);
  line-height: normal;
  transition: all 0.1s linear;
  --icon-stroke: var(--darkgray);
}
.tertiary .f-svg {
  margin: 0 calc(var(--base) * 0.5) !important;
}
.tertiary:hover {
  background: var(--lightergray);
}

.quaternary,
button.quaternary {
  background: transparent;
  padding: 0 8px;
  height: var(--base4);
  display: inline-flex;
  align-items: center;
  border-radius: var(--border-radius);
  color: var(--gray);
  cursor: pointer;
  outline: none;
  transition: all 0.1s linear;
  font-family: var(--font-sansserif);
  font-size: 14px;
  font-weight: bold;
  border: none;
  --icon-stroke: var(--gray);
  --icon-fill: var(--transparent);
}
.quaternary .f-svg {
  margin: 0 calc(var(--base) * 0.5) !important;
}
.quaternary:hover {
  background: var(--lightergray);
  color: var(--darkgray);
  --icon-stroke: var(--primary);
}
a.quaternary {
  border-bottom: none;
}

.buttons {
  display: flex;
}

.buttons .button_tertiary {
  margin-left: -3px;
  border-radius: 0;
}

.buttons .button_tertiary:first-child {
  border-top-left-radius: var(--border-radius);
  border-bottom-left-radius: var(--border-radius);
}

.buttons .button_tertiary:last-child {
  border-top-right-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
}

/* Layout */

header,
.header {
  display: flex;
  min-height: var(--base10);
  padding: 0 var(--base4);
  align-items: center;
  justify-content: space-between;
  border-bottom: var(--border-width) solid var(--darkgray);
  font-size: calc(var(--base) * 2.25);
  font-weight: bold;
  background: var(--yellow);
  color: var(--darkgray);
}

@media (max-width: 800px) {
  header,
  .header {
    display: block;
    padding: var(--base4);
  }
  header > *,
  .header > * {
    margin-bottom: var(--base2);
  }
  header > *:last-child,
  .header > *:last-child {
    margin-bottom: 0;
  }
}

footer,
.footer {
  border-top: 3px solid var(--darkgray);
  padding: var(--base4) var(--base4) calc(var(--base) * 12) var(--base4);
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  background: var(--yellow);
  color: var(--primary);
}

@media (max-width: 800px) {
  footer,
  .footer {
    display: block;
    padding: var(--base4);
  }
  footer > *,
  .footer > * {
    margin-bottom: var(--base2);
  }
  footer > *:last-child,
  .footer > *:last-child {
    margin-bottom: 0;
  }
}

/* Hero */

.hero {
  --base: 13px;
  padding: var(--base4);
  background: var(--darkergray);
  border-bottom: var(--border) solid var(--darkgray);
  color: var(--yellow);
  letter-spacing: -0.03em;
}
.hero h1 {
  color: var(--yellow);
}

/* Grid */

.grid {
  display: grid;
  grid-template-columns: var(--cols);
  grid-template-rows: var(--rows);
  grid-gap: var(--gap);
}
@media (max-width: 800px) {
  .grid {
    display: block;
  }
  .grid > * {
    margin-bottom: var(--gap);
  }
  .grid > *:last-child {
    margin-bottom: 0;
  }
}

/* BASICS */

.CodeMirror {
  /* Set height, width, borders, and global font properties here */
  font-family: monospace;
  height: 300px;
  color: black;
  direction: ltr;
}

/* PADDING */

.CodeMirror-lines {
  padding: 4px 0; /* Vertical padding around content */
}
.CodeMirror pre {
  padding: 0 4px; /* Horizontal padding of content */
}

.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  background-color: white; /* The little square between H and V scrollbars */
}

/* GUTTER */

.CodeMirror-gutters {
  border-right: 1px solid #ddd;
  background-color: #f7f7f7;
  white-space: nowrap;
}
.CodeMirror-linenumbers {
}
.CodeMirror-linenumber {
  padding: 0 3px 0 5px;
  min-width: 20px;
  text-align: right;
  color: #999;
  white-space: nowrap;
}

.CodeMirror-guttermarker {
  color: black;
}
.CodeMirror-guttermarker-subtle {
  color: #999;
}

/* CURSOR */

.CodeMirror-cursor {
  border-left: 1px solid black;
  border-right: none;
  width: 0;
}
/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
  border-left: 1px solid silver;
}
.cm-fat-cursor .CodeMirror-cursor {
  width: auto;
  border: 0 !important;
  background: #7e7;
}
.cm-fat-cursor div.CodeMirror-cursors {
  z-index: 1;
}
.cm-fat-cursor-mark {
  background-color: rgba(20, 255, 20, 0.5);
  -webkit-animation: blink 1.06s steps(1) infinite;
  -moz-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
}
.cm-animate-fat-cursor {
  width: auto;
  border: 0;
  -webkit-animation: blink 1.06s steps(1) infinite;
  -moz-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
  background-color: #7e7;
}
@-moz-keyframes blink {
  0% {
  }
  50% {
    background-color: transparent;
  }
  100% {
  }
}
@-webkit-keyframes blink {
  0% {
  }
  50% {
    background-color: transparent;
  }
  100% {
  }
}
@keyframes blink {
  0% {
  }
  50% {
    background-color: transparent;
  }
  100% {
  }
}

/* Can style cursor different in overwrite (non-insert) mode */
.CodeMirror-overwrite .CodeMirror-cursor {
}

.cm-tab {
  display: inline-block;
  text-decoration: inherit;
}

.CodeMirror-rulers {
  position: absolute;
  left: 0;
  right: 0;
  top: -50px;
  bottom: -20px;
  overflow: hidden;
}
.CodeMirror-ruler {
  border-left: 1px solid #ccc;
  top: 0;
  bottom: 0;
  position: absolute;
}

/* DEFAULT THEME */

.cm-s-default .cm-header {
  color: blue;
}
.cm-s-default .cm-quote {
  color: #090;
}
.cm-negative {
  color: #d44;
}
.cm-positive {
  color: #292;
}
.cm-header,
.cm-strong {
  font-weight: bold;
}
.cm-em {
  font-style: italic;
}
.cm-link {
  text-decoration: underline;
}
.cm-strikethrough {
  text-decoration: line-through;
}

.cm-s-default .cm-keyword {
  color: #708;
}
.cm-s-default .cm-atom {
  color: #219;
}
.cm-s-default .cm-number {
  color: #164;
}
.cm-s-default .cm-def {
  color: #00f;
}
.cm-s-default .cm-variable,
.cm-s-default .cm-punctuation,
.cm-s-default .cm-property,
.cm-s-default .cm-operator {
}
.cm-s-default .cm-variable-2 {
  color: #05a;
}
.cm-s-default .cm-variable-3,
.cm-s-default .cm-type {
  color: #085;
}
.cm-s-default .cm-comment {
  color: #a50;
}
.cm-s-default .cm-string {
  color: #a11;
}
.cm-s-default .cm-string-2 {
  color: #f50;
}
.cm-s-default .cm-meta {
  color: #555;
}
.cm-s-default .cm-qualifier {
  color: #555;
}
.cm-s-default .cm-builtin {
  color: #30a;
}
.cm-s-default .cm-bracket {
  color: #997;
}
.cm-s-default .cm-tag {
  color: #170;
}
.cm-s-default .cm-attribute {
  color: #00c;
}
.cm-s-default .cm-hr {
  color: #999;
}
.cm-s-default .cm-link {
  color: #00c;
}

.cm-s-default .cm-error {
  color: #f00;
}
.cm-invalidchar {
  color: #f00;
}

.CodeMirror-composing {
  border-bottom: 2px solid;
}

/* Default styles for common addons */

div.CodeMirror span.CodeMirror-matchingbracket {
  color: #0b0;
}
div.CodeMirror span.CodeMirror-nonmatchingbracket {
  color: #a22;
}
.CodeMirror-matchingtag {
  background: rgba(255, 150, 0, 0.3);
}
.CodeMirror-activeline-background {
  background: #e8f2ff;
}

/* STOP */

/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */

.CodeMirror {
  position: relative;
  overflow: hidden;
  background: white;
}

.CodeMirror-scroll {
  overflow: scroll !important; /* Things will break if this is overridden */
  /* 30px is the magic margin used to hide the element's real scrollbars */
  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -30px;
  margin-right: -30px;
  padding-bottom: 30px;
  height: 100%;
  outline: none; /* Prevent dragging from highlighting the element */
  position: relative;
}
.CodeMirror-sizer {
  position: relative;
  border-right: 30px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actual scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  position: absolute;
  z-index: 6;
  display: none;
}
.CodeMirror-vscrollbar {
  right: 0;
  top: 0;
  overflow-x: hidden;
  overflow-y: scroll;
}
.CodeMirror-hscrollbar {
  bottom: 0;
  left: 0;
  overflow-y: hidden;
  overflow-x: scroll;
}
.CodeMirror-scrollbar-filler {
  right: 0;
  bottom: 0;
}
.CodeMirror-gutter-filler {
  left: 0;
  bottom: 0;
}

.CodeMirror-gutters {
  position: absolute;
  left: 0;
  top: 0;
  min-height: 100%;
  z-index: 3;
}
.CodeMirror-gutter {
  white-space: normal;
  height: 100%;
  display: inline-block;
  vertical-align: top;
  margin-bottom: -30px;
}
.CodeMirror-gutter-wrapper {
  position: absolute;
  z-index: 4;
  background: none !important;
  border: none !important;
}
.CodeMirror-gutter-background {
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 4;
}
.CodeMirror-gutter-elt {
  position: absolute;
  cursor: default;
  z-index: 4;
}
.CodeMirror-gutter-wrapper ::selection {
  background-color: transparent;
}
.CodeMirror-gutter-wrapper ::-moz-selection {
  background-color: transparent;
}

.CodeMirror-lines {
  cursor: text;
  min-height: 1px; /* prevents collapsing before first draw */
}
.CodeMirror pre {
  /* Reset some styles that the rest of the page might have set */
  -moz-border-radius: 0;
  -webkit-border-radius: 0;
  border-radius: 0;
  border-width: 0;
  background: transparent;
  font-family: inherit;
  font-size: inherit;
  margin: 0;
  white-space: pre;
  word-wrap: normal;
  line-height: inherit;
  color: inherit;
  z-index: 2;
  position: relative;
  overflow: visible;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-variant-ligatures: contextual;
  font-variant-ligatures: contextual;
}
.CodeMirror-wrap pre {
  word-wrap: break-word;
  white-space: pre-wrap;
  /*word-break: normal;*/ /* CHANGED */
}

.CodeMirror-linebackground {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 0;
}

.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  padding: 0.1px; /* Force widget margins to stay inside of the container */
}

.CodeMirror-widget {
}

.CodeMirror-rtl pre {
  direction: rtl;
}

.CodeMirror-code {
  outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

.CodeMirror-measure {
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
  visibility: hidden;
}

.CodeMirror-cursor {
  position: absolute;
  pointer-events: none;
}
.CodeMirror-measure pre {
  position: static;
}

div.CodeMirror-cursors {
  visibility: hidden;
  position: relative;
  z-index: 3;
}
div.CodeMirror-dragcursors {
  visibility: visible;
}

.CodeMirror-focused div.CodeMirror-cursors {
  visibility: visible;
}

.CodeMirror-selected {
  background: #d9d9d9;
}
.CodeMirror-focused .CodeMirror-selected {
  background: #d7d4f0;
}
.CodeMirror-crosshair {
  cursor: crosshair;
}
.CodeMirror-line::selection,
.CodeMirror-line > span::selection,
.CodeMirror-line > span > span::selection {
  background: #d7d4f0;
}
.CodeMirror-line::-moz-selection,
.CodeMirror-line > span::-moz-selection,
.CodeMirror-line > span > span::-moz-selection {
  background: #d7d4f0;
}

.cm-searching {
  background-color: #ffa;
  background-color: rgba(255, 255, 0, 0.4);
}

/* Used to force a border model for a node */
.cm-force-border {
  padding-right: 0.1px;
}

@media print {
  /* Hide the cursor when printing */
  .CodeMirror div.CodeMirror-cursors {
    visibility: hidden;
  }
}

/* See issue #2901 */
.cm-tab-wrap-hack:after {
  content: "";
}

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext {
  background: none;
}
/*

    Name:       material
    Author:     Michael Kaminsky (http://github.com/mkaminsky11)

    Original material color scheme by Mattia Astorino (https://github.com/equinusocio/material-theme)

*/

.cm-s-material.CodeMirror {
  background-color: var(--paleblue);
  color: rgba(233, 237, 237, 1);
}
.cm-s-material .CodeMirror-gutters {
  background: #263238;
  color: rgb(83, 127, 126);
  border: none;
}
.cm-s-material .CodeMirror-guttermarker,
.cm-s-material .CodeMirror-guttermarker-subtle,
.cm-s-material .CodeMirror-linenumber {
  color: rgb(83, 127, 126);
}
.cm-s-material .CodeMirror-cursor {
  border-left: 1px solid #f8f8f0;
}
.cm-s-material div.CodeMirror-selected {
  background: rgba(255, 255, 255, 0.15);
}
.cm-s-material.CodeMirror-focused div.CodeMirror-selected {
  background: rgba(255, 255, 255, 0.1);
}
.cm-s-material .CodeMirror-line::selection,
.cm-s-material .CodeMirror-line > span::selection,
.cm-s-material .CodeMirror-line > span > span::selection {
  background: rgba(255, 255, 255, 0.1);
}
.cm-s-material .CodeMirror-line::-moz-selection,
.cm-s-material .CodeMirror-line > span::-moz-selection,
.cm-s-material .CodeMirror-line > span > span::-moz-selection {
  background: rgba(255, 255, 255, 0.1);
}

.cm-s-material .CodeMirror-activeline-background {
  background: rgba(0, 0, 0, 0);
}
.cm-s-material .cm-keyword {
  color: rgba(199, 146, 234, 1);
}
.cm-s-material .cm-operator {
  color: rgba(233, 237, 237, 1);
}
.cm-s-material .cm-variable-2 {
  color: #80cbc4;
}
.cm-s-material .cm-variable-3,
.cm-s-material .cm-type {
  color: #82b1ff;
}
.cm-s-material .cm-builtin {
  color: #decb6b;
}
.cm-s-material .cm-atom {
  color: #f77669;
}
.cm-s-material .cm-number {
  color: #f77669;
}
.cm-s-material .cm-def {
  color: rgba(233, 237, 237, 1);
}
.cm-s-material .cm-string {
  color: #c3e88d;
}
.cm-s-material .cm-string-2 {
  color: #80cbc4;
}
.cm-s-material .cm-comment {
  color: #546e7a;
}
.cm-s-material .cm-variable {
  color: #82b1ff;
}
.cm-s-material .cm-tag {
  color: #80cbc4;
}
.cm-s-material .cm-meta {
  color: #80cbc4;
}
.cm-s-material .cm-attribute {
  color: #ffcb6b;
}
.cm-s-material .cm-property {
  color: #80cbae;
}
.cm-s-material .cm-qualifier {
  color: #decb6b;
}
.cm-s-material .cm-variable-3,
.cm-s-material .cm-type {
  color: #decb6b;
}
.cm-s-material .cm-tag {
  color: rgba(255, 83, 112, 1);
}
.cm-s-material .cm-error {
  color: rgba(255, 255, 255, 1);
  background-color: #ec5f67;
}
.cm-s-material .CodeMirror-matchingbracket {
  text-decoration: underline;
  color: white !important;
}
